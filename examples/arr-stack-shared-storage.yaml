# ARR Stack with Shared Storage Example
# This example shows how to share a single PVC across multiple applications

---
# Shared PVC for media storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage
  namespace: media
spec:
  accessModes:
    - ReadWriteMany  # Allows multiple pods to mount simultaneously
  resources:
    requests:
      storage: 1Ti
  storageClassName: nfs-storage  # Use your storage class

---
# Radarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: ghcr.io/home-operations/radarr:latest
        ports:
        - containerPort: 7878
        volumeMounts:
        - name: media-storage
          mountPath: /media
        - name: config
          mountPath: /config
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config

---
# Jellyfin Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
        volumeMounts:
        - name: media-storage
          mountPath: /media
        - name: config
          mountPath: /config
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config

---
# Sonarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: ghcr.io/home-operations/sonarr:latest
        ports:
        - containerPort: 8989
        volumeMounts:
        - name: media-storage
          mountPath: /media
        - name: config
          mountPath: /config
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config

---
# Services
apiVersion: v1
kind: Service
metadata:
  name: radarr-service
  namespace: media
spec:
  selector:
    app: radarr
  ports:
  - port: 7878
    targetPort: 7878
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: media
spec:
  selector:
    app: jellyfin
  ports:
  - port: 8096
    targetPort: 8096
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-service
  namespace: media
spec:
  selector:
    app: sonarr
  ports:
  - port: 8989
    targetPort: 8989 