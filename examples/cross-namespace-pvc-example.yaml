# Cross-Namespace PVC Sharing Example
# This shows how to share a single PVC across multiple namespaces

---
# Step 1: Create the original PVC in a shared namespace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage
  namespace: shared-storage  # ← Original PVC in shared namespace
spec:
  accessModes:
    - ReadWriteMany  # ← Must be RWM for cross-namespace
  resources:
    requests:
      storage: 1Ti
  storageClassName: nfs-storage  # ← Must support RWM

---
# Step 2: Create PVC reference in radarr namespace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage-ref
  namespace: radarr  # ← Different namespace
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti  # ← Same size as original
  dataSource:  # ← This creates a reference to the original PVC
    kind: PersistentVolumeClaim
    name: media-storage
    namespace: shared-storage  # ← Points to original PVC

---
# Step 3: Create PVC reference in jellyfin namespace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage-ref
  namespace: jellyfin  # ← Another different namespace
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  dataSource:
    kind: PersistentVolumeClaim
    name: media-storage
    namespace: shared-storage

---
# Step 4: Radarr deployment in radarr namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: ghcr.io/home-operations/radarr:latest
        ports:
        - containerPort: 7878
        volumeMounts:
        - name: media-storage
          mountPath: /media  # ← Mounts the shared storage
        - name: config
          mountPath: /config
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage-ref  # ← Uses the reference PVC
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config

---
# Step 5: Jellyfin deployment in jellyfin namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
        volumeMounts:
        - name: media-storage
          mountPath: /media  # ← Same mount path
        - name: config
          mountPath: /config
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage-ref  # ← Uses the reference PVC
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config 