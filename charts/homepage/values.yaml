# Default values for homepage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/gethomepage/homepage
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000
  # LoadBalancer IP (only used when type is LoadBalancer)
  loadBalancerIP: ""
  # Service annotations
  annotations: {}
  # External traffic policy (Local, Cluster)
  externalTrafficPolicy: ""
  # Internal traffic policy (Local, Cluster)
  internalTrafficPolicy: ""

ingress:
  enabled: false
  className: ""
  annotations:
    gethomepage.dev/description: "Dynamically Detected Homepage"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: "Cluster Management"
    gethomepage.dev/icon: "homepage.png"
    gethomepage.dev/name: "Homepage"
  hosts:
    - host: homepage.my.network
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  HOMEPAGE_ALLOWED_HOSTS: "gethomepage.dev"

# Environment variables from existing secrets/configmaps
# Example:
# envFrom:
#   - secretRef:
#       name: my-existing-secret
#   - configMapRef:
#       name: my-existing-configmap
envFrom: []

# RBAC configuration
rbac:
  create: true
  # Additional rules to append to the default ClusterRole
  additionalRules: []
  # Example additional rules for deployment management:
  # additionalRules:
  #   # Allow restarting deployments
  #   - apiGroups: ["apps"]
  #     resources: ["deployments"]
  #     verbs: ["get", "list", "patch", "update"]
  #   - apiGroups: ["apps"]
  #     resources: ["deployments/restart"]
  #     verbs: ["patch"]
  #   # Allow managing replicasets
  #   - apiGroups: ["apps"]
  #     resources: ["replicasets"]
  #     verbs: ["get", "list"]
  #   # Allow viewing events
  #   - apiGroups: [""]
  #     resources: ["events"]
  #     verbs: ["get", "list", "watch"]
  #   # Allow managing services
  #   - apiGroups: [""]
  #     resources: ["services"]
  #     verbs: ["get", "list", "patch", "update"]
  #   # Allow managing configmaps
  #   - apiGroups: [""]
  #     resources: ["configmaps"]
  #     verbs: ["get", "list", "patch", "update"]
  
  # Use existing ClusterRole instead of creating a new one
  existingClusterRole: ""
  
  # Use existing ClusterRoleBinding instead of creating a new one
  existingClusterRoleBinding: ""

# Configuration files
config:
  # Usage Examples:
  # - Use external ConfigMaps: existingConfigMaps.settings: "my-settings"
  # - Use default values: leave empty or don't specify
  # - Mix both: specify only the files you want to override
  #
  # Use existing ConfigMaps for specific files
  # Leave empty to use default values from the chart
  # Note: ConfigMaps must contain the file with the correct key (e.g., "settings.yaml")
  existingConfigMaps:
    kubernetes: ""      # e.g., "my-kubernetes-config"
    settings: ""        # e.g., "my-settings-config"
    bookmarks: ""       # e.g., "my-bookmarks-config"
    services: ""        # e.g., "my-services-config"
    widgets: ""         # e.g., "my-widgets-config"
    docker: ""          # e.g., "my-docker-config"
    customCss: ""       # e.g., "my-css-config"
    customJs: ""        # e.g., "my-js-config"
  
  # Default configuration values (used when existingConfigMaps are not specified)
  # Kubernetes configuration
  kubernetes: |
    mode: cluster
    # Enable automatic service discovery for different types
    # ingress: true # default, enable ingress only
    # traefik: true # enable traefik ingressRoute
    # gateway: true # enable gateway-api

  # Settings configuration (empty by default)
  settings: ""
  # Example settings:
  # settings: |
  #   providers:
  #     longhorn:
  #       url: https://longhorn.my.network

  # Custom CSS
  customCss: ""

  # Custom JS
  customJs: ""

  # Bookmarks configuration
  bookmarks: |
    - Developer:
        - Github:
            - abbr: GH
              href: https://github.com/

  # Services configuration
  services: |
    - My First Group:
        - My First Service:
            href: http://localhost/
            description: Homepage is awesome
    
    - My Second Group:
        - My Second Service:
            href: http://localhost/
            description: Homepage is the best
    
    - My Third Group:
        - My Third Service:
            href: http://localhost/
            description: Homepage is ðŸ˜Ž

  # Widgets configuration
  widgets: |
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
          showLabel: true
          label: "cluster"
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
        network: default
    - search:
        provider: duckduckgo
        target: _blank

  # Docker configuration (empty by default)
  docker: ""

# Persistence
persistence:
  logs:
    enabled: true
    # storageClass: ""
    # accessMode: ReadWriteOnce
    # size: 1Gi

# Deployment strategy
strategy:
  type: RollingUpdate

# Revision history limit
revisionHistoryLimit: 3

# DNS policy
dnsPolicy: ClusterFirst

# Enable service links
enableServiceLinks: true

# Automount service account token
automountServiceAccountToken: true
