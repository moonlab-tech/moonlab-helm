# Example values file for mixed ConfigMap approach
# This demonstrates using a main ConfigMap for most files and overriding specific files

config:
  # Main ConfigMap containing most configuration files
  existingConfigMap: "homepage-main-config"
  
  # Override specific files with separate ConfigMaps
  existingConfigMaps:
    services: "homepage-custom-services"
    widgets: "homepage-custom-widgets"
    # Other files (kubernetes, settings, bookmarks, docker, customCss, customJs)
    # will be loaded from the main ConfigMap: "homepage-main-config"

# Example of how to create the ConfigMaps:
#
# 1. Create the main ConfigMap with most files:
# kubectl create configmap homepage-main-config \
#   --from-file=kubernetes.yaml \
#   --from-file=settings.yaml \
#   --from-file=bookmarks.yaml \
#   --from-file=docker.yaml \
#   --from-file=custom.css \
#   --from-file=custom.js
#
# 2. Create separate ConfigMaps for files you want to override:
# kubectl create configmap homepage-custom-services --from-file=services.yaml
# kubectl create configmap homepage-custom-widgets --from-file=widgets.yaml
#
# 3. Install with this values file:
# helm install homepage moonlab/homepage -f examples/mixed-configmap-values.yaml

# Example configuration for the custom services
# (This would be in the homepage-custom-services ConfigMap)
services: |
  - Custom Services:
      - My App:
          href: https://myapp.example.com
          description: My custom application
          icon: myapp.png
      - Another Service:
          href: https://another.example.com
          description: Another custom service
          icon: another.png

# Example configuration for the custom widgets
# (This would be in the homepage-custom-widgets ConfigMap)
widgets: |
  - kubernetes:
      deployments:
        show: true
        showLabel: true
        label: "my-deployments"
  - resources:
      backend: resources
      expanded: true
      cpu: true
      memory: true
      network: default 